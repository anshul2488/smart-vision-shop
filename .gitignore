# Byte-compiled / optimized / DLL files
__pycache__/
*.py[cod]
*$py.class

# C extensions
*.so

# Distribution / packaging
.Python
build/
develop-eggs/
dist/
downloads/
eggs/
.eggs/
lib/
lib64/
parts/
sdist/
var/
wheels/
pip-wheel-metadata/
share/python-wheels/
*.egg-info/
.installed.cfg
*.egg
MANIFEST

# PyInstaller
#  Usually these files are written by a python script from a template
#  before PyInstaller builds the exe, so as to inject date/other infos into it.
*.manifest
*.spec

# Installer logs
pip-log.txt
pip-delete-this-directory.txt

# Unit test / coverage reports
htmlcov/
.tox/
.nox/
.coverage
.coverage.*
.cache
nosetests.xml
coverage.xml
*.cover
*.py,cover
.hypothesis/
.pytest_cache/

# Translations
*.mo
*.pot

# Django stuff:
*.log
local_settings.py
db.sqlite3
db.sqlite3-journal

# Flask stuff:
instance/
.webassets-cache

# Scrapy stuff:
.scrapy

# Sphinx documentation
docs/_build/

# PyBuilder
target/

# Jupyter Notebook
.ipynb_checkpoints

# IPython
profile_default/
ipython_config.py

# pyenv
.python-version

# pipenv
#   According to pypa/pipenv#598, it is recommended to include Pipfile.lock in version control.
#   However, in case of collaboration, if having platform-specific dependencies or dependencies
#   having no cross-platform support, pipenv may install dependencies that don't work, or not
#   install all needed dependencies.
#Pipfile.lock

# PEP 582; used by e.g. github.com/David-OConnor/pyflow
__pypackages__/

# Celery stuff
celerybeat-schedule
celerybeat.pid

# SageMath parsed files
*.sage.py

# Environments
.env
.venv
env/
venv/
ENV/
env.bak/
venv.bak/
btech311/

# Spyder project settings
.spyderproject
.spyproject

# Rope project settings
.ropeproject

# mkdocs documentation
/site

# mypy
.mypy_cache/
.dmypy.json
dmypy.json

# Pyre type checker
.pyre/

# Project-specific exclusions
# Dataset and training data
dataset/
train_data/
test_data/
sample_images/

# Temporary output folders
temp_output/
pipeline_results/
test_results/
backups/

# Model files and checkpoints
*.pth
*.h5
*.pkl
*.joblib
*.model
models/checkpoint_*.pth
models/best_model.pth
models/training_curves.png

# OCR and ML model outputs
*.onnx
*.tflite
*.pb

# Large data files
*.csv
*.json
*.xlsx
*.parquet
*.feather

# API keys and secrets
.env
.env.local
.env.production
.env.staging
secrets.json
api_keys.json
config.json

# IDE and editor files
.vscode/
.idea/
*.swp
*.swo
*~
.DS_Store
Thumbs.db
desktop.ini

# OS generated files
.DS_Store
.DS_Store?
._*
.Spotlight-V100
.Trashes
ehthumbs.db
Thumbs.db

# Log files
*.log
logs/
*.out
*.err

# Runtime files
*.pid
*.sock

# Docker
.dockerignore
docker-compose.override.yml

# Node.js (if using any frontend build tools)
node_modules/
npm-debug.log*
yarn-debug.log*
yarn-error.log*

# Temporary files
*.tmp
*.temp
*.bak
*.backup
*.orig

# Scraper outputs and cache
scraper_cache/
*.cache
cookies.txt

# Development and testing
.pytest_cache/
.coverage
htmlcov/
.tox/
.nox/
coverage.xml
*.cover
.hypothesis/

# Documentation builds
docs/_build/
site/

# Jupyter Notebook checkpoints
.ipynb_checkpoints/

# IPython
profile_default/
ipython_config.py

# pyenv
.python-version

# pipenv
Pipfile.lock

# PEP 582
__pypackages__/

# Celery
celerybeat-schedule
celerybeat.pid

# SageMath
*.sage.py

# Spyder
.spyderproject
.spyproject

# Rope
.ropeproject

# mkdocs
/site

# mypy
.mypy_cache/
.dmypy.json
dmypy.json

# Pyre
.pyre/

# Project specific
user_pincode.json
blinkit_reverse_engineering_results.json
fix_numpy_compatibility.py
handwritten_ocr_integration.py
run_handwritten_ocr.py
run_server.py
test_app_integration.py
test_hybrid_ocr.py
test_zepto_integration.py
comprehensive_ocr_test.py
grocery_ocr_llm_model.py
grocery_ocr_model.pth
specialized_preprocessing.py
ocr_training.py
ocr_processor.py
grocery_pipeline.py
run_pipeline.py
price_scraper.py
app.py
sample_grocery_list.json
blinkit_url_reverse_engineer.py